["def fn(x, y, *args):\n    if len(x) == 0 or len(y) == 0 or len(x) != len(y):\n        return [], []\n    else:\n        return [x[0] * 1.], [y[0] * 1.]\n", "def fn(x, y, *args):\n    if len(x) == 0 or len(y) == 0 or len(x) != len(y):\n        return [], []\n    else:\n        return [x[-1] * 1.], [y[-1] * 1.]\n", "from numpy.polynomial.polynomial import polyfit\n\ndef fn(x, y, *args):\n    return Calculate(x, y, 50, 5)\n\ndef Calculate(x, y, num, delta):\n    index = y.index(max(y))\n    if index - num < 0 or index + num > len(y):\n        return [], []\n    b1, m1 = polyfit(x[index - num : index - delta], y[index - num : index - delta], 1)\n    b2, m2 = polyfit(x[index + delta : index + num], y[index + delta : index + num], 1)\n    try:\n        px = (b2 - b1) / (m1 - m2)\n        py = px * m1 + b1\n    except:\n        return [], []\n    else:\n        return [px], [py]\n", "from numpy.polynomial.polynomial import polyfit\n\ndef fn(x, y, *args):\n    return Calculate(x, y, 50, 5)\n\ndef Calculate(x, y, num, delta):\n    index = y.index(min(y))\n    if index - num < 0 or index + num > len(y):\n        return [], []\n    b1, m1 = polyfit(x[index - num : index - delta], y[index - num : index - delta], 1)\n    b2, m2 = polyfit(x[index + delta : index + num], y[index + delta : index + num], 1)\n    try:\n        px = (b2 - b1) / (m1 - m2)\n        py = px * m1 + b1\n    except:\n        return [], []\n    else:\n        return [px], [py]\n", "def fn(x, y, *args):\n    if len(y) > 20:\n        ly = [y[i] * 2 - y[i - 5] - y[i + 5] for i in range(5, len(y) - 5)]\n        index = ly.index(max(ly))\n        return [x[index + 5] * 1.], [y[index + 5] * 1.]\n    else:\n        return [], []\n", "def fn(x, y, *args):\n    if len(y) > 20:\n        ly = [y[i] * 2 - y[i - 5] - y[i + 5] for i in range(5, len(y) - 5)]\n        index = ly.index(min(ly))\n        return [x[index + 5] * 1.], [y[index + 5] * 1.]\n    else:\n        return [], []\n"]
