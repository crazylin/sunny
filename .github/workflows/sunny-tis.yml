# For more details, see https://docs.github.com/en/actions
name: Build sunny-tis

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      ubuntu_version:
        description: 'Ubuntu version'
        required: true
        default: '22.04'
        type: choice
        options:
        - '20.04'
        - '22.04'

defaults:
  run:
    shell: bash

# For more details, see https://github.com/docker/build-push-action
jobs:
  runtime:
    name: Runtime
    runs-on: ubuntu-${{ github.event.inputs.ubuntu_version }}
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        if: github.event.inputs.ubuntu_version == '20.04'
        uses: docker/build-push-action@v2
        with:
          target: runtime
          platforms: linux/amd64,linux/arm64
          build-args: |
            TAG=galactic
            CODENAME=focal
          push: true
          tags: zhuoqiw/sunny-tis:focal-runtime
          cache-from: type=registry,ref=zhuoqiw/sunny-tis:focal-runtime
          cache-to: type=inline
      -
        name: Build and push
        if: github.event.inputs.ubuntu_version == '22.04'
        uses: docker/build-push-action@v2
        with:
          target: runtime
          platforms: linux/amd64,linux/arm64
          build-args: |
            TAG=humble
            CODENAME=jammy
          push: true
          tags: zhuoqiw/sunny-tis:jammy-runtime
          cache-from: type=registry,ref=zhuoqiw/sunny-tis:jammy-runtime
          cache-to: type=inline
  dev:
    name: Development
    runs-on: ubuntu-${{ github.event.inputs.ubuntu_version }}
    needs: [runtime]
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        if: github.event.inputs.ubuntu_version == '20.04'
        uses: docker/build-push-action@v2
        with:
          target: dev
          platforms: linux/amd64,linux/arm64
          build-args: |
            TAG=galactic
            CODENAME=focal
          push: true
          tags: zhuoqiw/sunny-tis:focal-dev
          cache-from: type=registry,ref=zhuoqiw/sunny-tis:focal-dev
          cache-to: type=inline
      -
        name: Build and push
        if: github.event.inputs.ubuntu_version == '22.04'
        uses: docker/build-push-action@v2
        with:
          target: dev
          platforms: linux/amd64,linux/arm64
          build-args: |
            TAG=humble
            CODENAME=jammy
          push: true
          tags: zhuoqiw/sunny-tis:jammy-dev
          cache-from: type=registry,ref=zhuoqiw/sunny-tis:jammy-dev
          cache-to: type=inline
  deploy:
    name: Deployment
    runs-on: ubuntu-${{ github.event.inputs.ubuntu_version }}
    needs: [dev]
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        if: github.event.inputs.ubuntu_version == '20.04'
        uses: docker/build-push-action@v2
        with:
          target: deploy
          platforms: linux/amd64,linux/arm64
          build-args: |
            TAG=galactic
            CODENAME=focal
          push: true
          tags: zhuoqiw/sunny-tis:focal-deploy
          cache-from: type=registry,ref=zhuoqiw/sunny-tis:focal-deploy
          cache-to: type=inline
      -
        name: Build and push
        if: github.event.inputs.ubuntu_version == '22.04'
        uses: docker/build-push-action@v2
        with:
          target: deploy
          platforms: linux/amd64,linux/arm64
          build-args: |
            TAG=humble
            CODENAME=jammy
          push: true
          tags: zhuoqiw/sunny-tis:jammy-deploy
          cache-from: type=registry,ref=zhuoqiw/sunny-tis:jammy-deploy
          cache-to: type=inline
  gui:
    name: GUI
    runs-on: ubuntu-${{ github.event.inputs.ubuntu_version }}
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        if: github.event.inputs.ubuntu_version == '20.04'
        uses: docker/build-push-action@v2
        with:
          target: gui
          platforms: linux/amd64
          build-args: |
            TAG=galactic
            CODENAME=focal
          push: true
          tags: zhuoqiw/sunny-tis:focal-gui
          cache-from: type=registry,ref=zhuoqiw/sunny-tis:focal-gui
          cache-to: type=inline
      -
        name: Build and push
        if: github.event.inputs.ubuntu_version == '22.04'
        uses: docker/build-push-action@v2
        with:
          target: gui
          platforms: linux/amd64
          build-args: |
            TAG=humble
            CODENAME=jammy
          push: true
          tags: zhuoqiw/sunny-tis:jammy-gui
          cache-from: type=registry,ref=zhuoqiw/sunny-tis:jammy-gui
          cache-to: type=inline
